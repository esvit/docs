openapi: 3.0.0
info:
  title: Finance Transactions API
  version: 1.0.0
servers:
  - url: https://api.nomi.tools
    description: Main API server
security:
  - basicAuth: []

paths:
  /v1/finance/accounting/transactions:
    get:
      summary: Get all transactions
      description: Retrieve a list of transactions with pagination.
      operationId: getTransactions
      tags:
        - Finance / Accounting
      parameters:
        - name: pagination
          in: query
          required: false
          schema:
            type: object
            properties:
              limit:
                type: integer
              offset:
                type: integer
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            enum:
              - application/json
            default: application/json
      responses:
        200:
          description: List of transactions
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactions:
                    type: array
                    items:
                      $ref: '#/components/schemas/TransactionPayload'
                  meta:
                    type: object
    delete:
      summary: Bulk delete transactions
      description: Delete multiple transactions in bulk.
      operationId: bulkDelete
      tags:
        - Finance / Accounting
      parameters:
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            enum:
              - application/json
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: string
      responses:
        204:
          description: Transactions deleted successfully

#  /v1/finance/accounting/transactions/filters:
#    get:
#      summary: Get transaction filters
#      description: Retrieve filters for transactions.
#      operationId: getTransactionFilters
#      tags:
#        - Finance / Accounting
#      responses:
#        200:
#          description: Filters for transactions
#          content:
#            application/json:
#              schema:
#                type: object
#                properties:
#                  filters:
#                    type: object

  /v1/finance/accounting/transactions/{id}:
    get:
      summary: Get transaction by ID
      description: Retrieve a specific transaction by its ID.
      operationId: getTransaction
      tags:
        - Finance / Accounting
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            enum:
              - application/json
            default: application/json
      responses:
        200:
          description: Transaction details
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction:
                    $ref: '#/components/schemas/TransactionPayload'

  /v1/finance/accounting/transactions/{id}/complete:
    post:
      summary: Complete a transaction
      description: Mark a transaction as completed.
      operationId: completeTransaction
      tags:
        - Finance / Accounting
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            enum:
              - application/json
            default: application/json
      responses:
        204:
          description: Transaction completed successfully

  /v1/finance/accounting/transactions/{id}/unlink:
    post:
      summary: Unlink a transaction
      description: Unlink a transaction from another entity.
      operationId: unlinkTransaction
      tags:
        - Finance / Accounting
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: Transaction unlinked successfully

  /v1/finance/accounting/transactions/planned/search:
    post:
      summary: Search planned transactions
      description: Search for planned transactions based on criteria.
      operationId: searchPlanned
      tags:
        - Finance / Accounting
      parameters:
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            enum:
              - application/json
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: List of planned transactions
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactions:
                    type: array
                    items:
                      $ref: '#/components/schemas/TransactionPayload'
                  meta:
                    type: object

  /v1/finance/accounting/transactions/suggestion:
    post:
      summary: Suggest group operation
      description: Suggest a group operation for transactions.
      operationId: suggestionGroupOperation
      tags:
        - Finance / Accounting
      parameters:
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            enum:
              - application/json
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: Suggestion details
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  description:
                    type: string
                  automationSuggestion:
                    type: string
                  projectId:
                    type: string
                  counterpartyId:
                    type: string
                  categoryId:
                    type: string

  /v1/finance/accounting/transactions/apply:
    post:
      summary: Apply changes to transactions
      description: Apply changes to multiple transactions.
      operationId: applyToTransactions
      tags:
        - Finance / Accounting
      parameters:
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            enum:
              - application/json
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        204:
          description: Changes applied successfully

  /v1/finance/accounting/transactions/link:
    post:
      summary: Link transactions
      description: Link two transactions together.
      operationId: linkTransactions
      tags:
        - Finance / Accounting
      parameters:
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            enum:
              - application/json
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: string
      responses:
        200:
          description: Transactions linked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string

  /v1/finance/accounting/transactions/bulk:
    post:
      summary: Bulk save transactions
      description: Save multiple transactions in bulk.
      operationId: bulkSave
      tags:
        - Finance / Accounting
      parameters:
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            enum:
              - application/json
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TransactionPayload'
      responses:
        200:
          description: Transactions saved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ids:
                    type: array
                    items:
                      type: string

  /v1/finance/accounting/transactions/import:
    post:
      summary: Import transactions from file
      description: Import transactions from a file (CSV, XLS, etc.).
      operationId: importFromFile
      tags:
        - Finance / Accounting
      parameters:
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            enum:
              - application/json
            default: application/json
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: Transactions imported successfully
          content:
            application/json:
              schema:
                type: object

components:
  schemas:
    TransactionPayload:
      type: object
      properties:
        id:
          type: string
          nullable: true
          description: Unique identifier for the transaction.
        amount:
          type: number
          description: The amount of the transaction.
        date:
          type: string
          format: date
          description: The date of the transaction.
        incomeDate:
          type: string
          format: date
          nullable: true
          description: The income date of the transaction, if different.
        externalId:
          type: string
          nullable: true
          description: External identifier for the transaction.
        description:
          type: string
          description: Description of the transaction.
        type:
          type: string
          description: Type of the transaction (e.g., income, outcome, transfer).
        isRecurring:
          type: boolean
          description: Indicates if the transaction is recurring.
        isPlanned:
          type: boolean
          nullable: true
          description: Indicates if the transaction is planned.
        isCoveredByClient:
          type: boolean
          nullable: true
          description: Indicates if the transaction is covered by the client.
        isCompleted:
          type: boolean
          nullable: true
          description: Indicates if the transaction is completed.
        isDifferentIncomeDate:
          type: boolean
          nullable: true
          description: Indicates if the income date is different from the transaction date.
        recurrencePeriod:
          type: string
          nullable: true
          description: Recurrence period (e.g., WEEKLY, MONTHLY).
        recurrenceEndDate:
          type: string
          format: date
          nullable: true
          description: End date for the recurrence.
        accountId:
          type: string
          nullable: true
          description: Account ID associated with the transaction.
        categoryId:
          type: string
          nullable: true
          description: Category ID associated with the transaction.
        counterpartyId:
          type: string
          nullable: true
          description: Counterparty ID associated with the transaction.
        commitmentPartId:
          type: string
          nullable: true
          description: Commitment part ID associated with the transaction.
        projectId:
          type: string
          nullable: true
          description: Project ID associated with the transaction.
        projectCategoryId:
          type: string
          nullable: true
          description: Project category ID associated with the transaction.
        isCommitment:
          type: boolean
          nullable: true
          description: Indicates if the transaction is a commitment.
        fileId:
          type: string
          nullable: true
          description: File ID associated with the transaction.
        file2Id:
          type: string
          nullable: true
          description: Second file ID associated with the transaction.
        file3Id:
          type: string
          nullable: true
          description: Third file ID associated with the transaction.
        tags:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                nullable: true
              Id:
                type: string
                nullable: true
          description: Tags associated with the transaction.
        parts:
          type: array
          items:
            $ref: '#/components/schemas/TransactionPartPayload'
          description: Parts of the transaction.
        destTransactionId:
          type: string
          nullable: true
          description: Destination transaction ID for transfers.
        destAccountId:
          type: string
          nullable: true
          description: Destination account ID for transfers.
        destAmount:
          type: number
          nullable: true
          description: Destination amount for transfers.

    TransactionPartPayload:
      type: object
      properties:
        id:
          type: string
          nullable: true
        amount:
          type: number
        date:
          type: string
          format: date
        categoryId:
          type: string
          nullable: true
        legalEntityId:
          type: string
          nullable: true
        exchangeSourceId:
          type: string
          nullable: true
        counterpartyId:
          type: string
          nullable: true
        commitmentPartId:
          type: string
          nullable: true
        projectId:
          type: string
          nullable: true
        isCommitment:
          type: boolean
          nullable: true
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: Error code.
        message:
          type: string
          description: Error message.
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: >
        Use HTTP Basic Authentication. 
        Provide your email as login and PPT token as the password.
